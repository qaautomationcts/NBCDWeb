package com.nbcd.GenericLib;import java.lang.reflect.Method;import java.text.SimpleDateFormat;import java.util.Date;import org.openqa.selenium.WebDriver;import org.testng.ITestResult;import org.testng.annotations.AfterClass;import org.testng.annotations.AfterMethod;import org.testng.annotations.AfterSuite;import org.testng.annotations.AfterTest;import org.testng.annotations.BeforeMethod;import com.relevantcodes.extentreports.ExtentReports;import com.relevantcodes.extentreports.ExtentTest;import com.relevantcodes.extentreports.LogStatus;public class Extent_Reports{		public static ExtentReports extentReport;	public static ExtentTest logger;	static String reportFolder;	static WebDriver driver;	static	{		SimpleDateFormat sdfDateReport = new SimpleDateFormat("yyyy_MM_dd_HH_mm_ss");		Date now = new Date();				extentReport=new ExtentReports(System.getProperty("user.dir") +"/ReportGenerator/NBCAutomation_"+ sdfDateReport.format(now) +".html",false);		//extentReport.loadConfig(new File(System.getProperty("user.dir")+"\\extent-config.xml"));		extentReport.addSystemInfo("Selenium Version", "3.0.1");    	extentReport.addSystemInfo("Environment", "Production");    	extentReport.assignProject("NBC");	}		public void getResult(ITestResult result)	{		if(result.getStatus() == ITestResult.FAILURE)		{			logger.log(LogStatus.FAIL, "Test Case Failed :"+result.getName());			logger.log(LogStatus.FAIL, "Failed Reason is :"+result.getThrowable());		}		else if(result.getStatus() == ITestResult.SKIP)		{			logger.log(LogStatus.SKIP, "Test Case Skipped is :"+result.getName());			logger.log(LogStatus.FAIL, "Skipped Reason is  :"+result.getThrowable());		}		else if(result.getStatus() == ITestResult.SUCCESS)		{			logger.log(LogStatus.PASS, "Test Case Pass :"+result.getName());					}		else if(result.getStatus() == ITestResult.STARTED)		{			logger.log(LogStatus.SKIP, "Test Case Started :"+result.getName());					}			}		@BeforeMethod	public void beforeMethod(Method result)	{		logger=extentReport.startTest(result.getName());		logger.log(LogStatus.INFO, result.getName()+ " test Started");	}		@AfterMethod	public void afterMethod(ITestResult result)	{		getResult(result);				}	@AfterTest	public void endReport(){			extentReport.endTest(logger);		extentReport.flush();    }	}